version: '3'
services:
  container:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-middlware-container
    ports:
      - "${NODE_PORT}:${NODE_PORT}"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - production
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:management
    container_name: chat-middlware-rabbitmq
    hostname: ${RABBITMQ_HOST}
    environment:
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "15672:15672"
    networks:
      - production

  postgres:
    image: postgres:15
    container_name: chat-middlware-postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - production

  n8n:
    image: n8nio/n8n
    container_name: chat-middlware-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_SECURE_COOKIE=false
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${DB_SERVER}
      - DB_POSTGRESDB_PORT=${DB_PORT}
      - DB_POSTGRESDB_DATABASE=postgres
      - DB_POSTGRESDB_USER=${DB_USERNAME}
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - postgres
    networks:
      - production

volumes:
  pgdata:

networks:
  production:
    driver: bridge