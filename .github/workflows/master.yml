name: Build and Deploy Chat Middleware Docker Image

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  build-deploy:
    name: Build Chat Middleware Docker Image
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Notify Discord (Build Started)
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot Docker", "content": "üöÄ **Build da imagem Chat Middleware iniciado!**\nReposit√≥rio: `${{ github.repository }}`\nBranch/Tag: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }} || true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image (branch master)
      if: github.ref == 'refs/heads/master'
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-middleware:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/chat-middleware:latest

    - name: Build and push Docker image (tagged release)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-middleware:${{ github.ref_name }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/chat-middleware:${{ github.ref_name }}

  report-status:
    name: Report Build Status
    needs: build-deploy
    environment: production
    runs-on: ubuntu-latest

    steps:
    - name: Notify Discord (Success)
      if: success()
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot Docker", "content": "‚úÖ **Chat Middleware Docker Image Build Sucesso!**\nBranch/Tag: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Notify Discord (Failure)
      if: failure()
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot Docker", "content": "‚ùå **Falha ao buildar a imagem do Chat Middleware!**\nBranch/Tag: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }}